---
breadcrumb: RabbitMQ for Pivotal Cloud Foundry Documentation
title: Configuring the RabbitMQ&reg; Service
owner: London Services
---

To configure RabbitMQ for [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF), navigate to the tile in the Ops Manager Installation Dashboard and click the **Settings** tab.

You can configure the following items:

## <a id='dash'></a>Management Dashboard

You must choose an admin username and password for RabbitMQ.

This will grant you full admin access to RabbitMQ via the Management UI.

<%= image_tag("images/config_credentials.jpeg") %>

<p class="note"><strong>Note</strong>: To rotate your administrator credentials, enter a new username and password, save your options, and redeploy by returning to the Ops Manager Installation Dashboard and clicking <strong>Apply Changes</strong>.</p>

## Plugins

You can choose which plugins you wish to enable.

You must leave the management plugin enabled otherwise nothing will work.

<%= image_tag("images/config_plugins.jpeg") %>

[Click here for more information about RabbitMQ plugins](https://www.rabbitmq.com/plugins.html)

## <a id="haproxy"></a>HAProxy Ports

You can choose which ports HAProxy should load balance to the RabbitMQ nodes.

<%= image_tag("images/config_haproxy.jpeg") %>

By default all the default ports of all the available plugins will be load-balanced.

However, if you install extra protocol plugins, or provide a custom configuration which changes the ports that RabbitMQ listens on then you must update the list of load-balanced ports.

Note that you must always leave the management plugin listening on port 15672 and load balance that port.

If you change the topology of your RabbitMQ cluster, the HAProxy is automatically reconfigured during the deployment.

### Port to protocol mappings
* 15672 = Management dashboard
* 5672 = RabbitMQ
* 5671 = RabbitMQ SSL
* 1883 = MQTT
* 8883 = MQTT SSL
* 61613 = STOMP
* 61614 = STOMP SSL
* 15674 = Web STOMP
* 4567 = RabbitMQ Service Broker
* 3457 - 3459 = CF Loggregator

## Security Groups

To enable access to the RabbitMQ tile service, you will need to ensure your security
group allows access to the HAProxy and RabbitMQ Service Broker VMs configured in your deployment. The IP addresses
for these can be obtained from Ops Manager "Status" page for the RabbitMQ tile.
You should ensure the following ports are enabled for those VMs:
15672, 5672, 5671, 1883, 8883, 61613, 61614, 15674, 4567, 3457 - 3459.

Here is a template for configuring your Cloud Foundry security groups:
```
[
{"protocol":"tcp","destination":"<haproxy-node-IP-addresses>","ports":"5671,5672,1883,8883,61613,61614,15672,15674"},
{"protocol":"tcp","destination":"<service-broker-node-IP-addresses>","ports":"4567"}
]
```

## <a id="asg"></a>Application Security Groups

To allow this service to have network access you must create
[Application Security Groups](http://docs.pivotal.io/pivotalcf/adminguide/app-sec-groups.html) (ASGs).

<p class="note"><strong>Note</strong>: Without Application Security Groups the service will not be usable.</p>

### Application Container Network Connections

Application containers that use instances of the RabbitMQ service require the following outbound network connections:

|Destination        |Ports       |Protocol   |Reason
|---                |---         |---        |---
|`HAProxy IPs`     |5672         |tcp        |Application containers using AMQP
|`HAProxy IPs`     |5671       |tcp        |Application containers using AMQP over SSL
|`HAProxy IPs`     |1883         |tcp        |Application containers using MQTT
|`HAProxy IPs`     |8883        |tcp        |Application containers using MQTT over SSL
|`HAProxy IPs`     |61613         |tcp        |Application containers using STOMP
|`HAProxy IPs`     |61614        |tcp        |Application containers using STOMP over SSL
|`HAProxy IPs`     |61613         |tcp        |Application containers using Web STOMP

Create an ASG called `rabbitmq-app-containers` with the above configuration and bind it to the appropriate space, or to provide access to all started apps, bind it to the `default-running` ASG set and restart your apps. Please note if you are using an external load balancer or have more than one IP address for HAProxy, you must also create egress rules for these. Example:

```
[
  {
      "ports": "5671-5672",
      "protocol": "tcp",
      "destination": "10.10.10.10/32"
  }
]
```

## SSL

You can provide SSL certificates and keys for use by the RabbitMQ cluster.

<%= image_tag("images/config_ssl.jpeg") %>

Note SSL is simultaneously provided on the AMQPS port (5671) and the management port (15672).

If you provide SSL keys and certificates, you are disabling non-SSL support.

No other plugins are automatically configured for use with SSL.

Note SSL settings are applied equally across all machines in the cluster.

[Click here for more information about SSL support](https://www.rabbitmq.com/ssl.html)

## <a id="erlang"></a>Erlang Cookie

You can provide an Erlang cookie to be used by the cluster if you wish.
This can be useful if you want to connect directly to the RabbitMQ cluster such as with `rabbitmqctl` or to connect other machines running Erlang.

<%= image_tag("images/config_erlang.jpeg") %>

## <a id="config"></a>RabbitMQ Config

You can provide a full <code>rabbitmq.config</code> file, if you wish.

<%= image_tag("images/config_rabbitmq.jpeg") %>

This file is then provided to all the nodes in the cluster.

[Click here for more information about the RabbitMQ configuration file](https://www.rabbitmq.com/configure.html)

## <a id="tls"></a>TLS Support

TLS v1.0 is disabled by default, due to insecurities.

<%= image_tag("images/config_tls1.jpeg") %>

You can enable it again by ticking the checkbox.

TLS v1.1 and 1.2 are enabled by default and cannot be turned on or off.

## External load balancer
<%= image_tag("images/config_elb.jpeg") %>

You can configure a DNS name or IP address of an external load balancer to be returned in the binding credentials (`VCAP_SERVICES`) to application developers.

## RabbitMQ Server settings that cannot be overwritten
* `rabbit halt_on_upgrade_failure false`
* `rabbitmq_mqtt subscription_ttl 1800000`
* `rabbit disk_free_limit 50MB`
* `log_levels [{connection,info}]`
* `halt_on_upgrade_failure false`
* `{rabbit, [ {collect_statistics_interval, 60000}] }`
* `{rabbitmq_management, [ {rates_mode, none}] }`

When SSL is enabled:

* `rabbit tcp_listeners []`
* `rabbit ssl_listeners [5671]`
* `rabbitmq_management listener [{port,15672},{ssl,false}]`
* `rabbitmq_mqtt ssl_listeners [8883]`
* `rabbitmq_stomp ssl_listeners [61614]`
